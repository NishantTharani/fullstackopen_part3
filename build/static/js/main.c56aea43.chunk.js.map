{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","personId","delete","personObj","put","Filter","props","nameFilter","handleNameFilterChange","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleSubmit","type","onClick","Persons","persons","handleDelete","filter","person","name","toLowerCase","includes","map","number","id","Notification","message","notificationStyle","color","background","fontSize","style","className","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","addedMsg","setAddedMsg","errorMsg","setErrorMsg","useEffect","phonebookService","event","target","preventDefault","matches","length","console","log","updatedPerson","concat","setTimeout","catch","error","newPerson","window","confirm","returnedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c56aea43.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => response.data)\n}\n\nconst create = personObject => {\n    return axios\n        .post(baseUrl, personObject)\n        .then(response => response.data)\n}\n\nconst deletePerson = personId => {\n    return axios\n        .delete(`${baseUrl}/${personId}`)\n        .then(response => response.data)\n}\n\nconst updatePerson = (personId, personObj) => {\n    return axios\n        .put(`${baseUrl}/${personId}`, personObj)\n        .then(response => response.data)\n}\n\nexport default {getAll, create, deletePerson, updatePerson}","import React, {useState, useEffect} from 'react';\nimport phonebookService from \"./services/phonebook\"\n\nconst Filter = (props) => {\n    const nameFilter = props.nameFilter\n    const handleNameFilterChange = props.handleNameFilterChange\n    return (\n        <div>\n            filter shown with <input value={nameFilter}\n                                     onChange={handleNameFilterChange}/>\n        </div>\n    )\n}\n\nconst PersonForm = (props) => {\n    const newName = props.newName\n    const newNumber = props.newNumber\n    const handleNameChange = props.handleNameChange\n    const handleNumberChange = props.handleNumberChange\n    const handleSubmit = props.handleSubmit\n    return (\n        <form>\n            <div>\n                name: <input value={newName}\n                             onChange={handleNameChange}/>\n            </div>\n            <div>\n                number: <input value={newNumber}\n                               onChange={handleNumberChange}/>\n            </div>\n            <div>\n                <button type=\"submit\" onClick={handleSubmit}>add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Persons = (props) => {\n    const persons = props.persons;\n    const nameFilter = props.nameFilter;\n    const handleDelete = props.handleDelete;\n    const displayedPersons = persons.filter((person) => {\n            const lowerName = person.name.toLowerCase()\n            return lowerName.includes(nameFilter)\n        }\n    )\n\n    return (\n        displayedPersons.map((person) =>\n            <div key={person.id}>\n                {person.name} {person.number}\n                <button onClick={() => handleDelete(person.id, person.name)}>Delete</button>\n            </div>)\n    )\n}\n\nconst Notification = (props) => {\n    const message = props.message;\n    const type = props.type;\n    let notificationStyle = {};\n    if (type === 'error') {\n        notificationStyle = {\n            color: 'red',\n            background: 'lightgrey',\n            fontSize: '20px'\n        }\n    } else if (type === 'added') {\n        notificationStyle = {\n            color: 'green',\n            background: 'lightblue',\n            fontSize: '20px'\n        }\n    }\n\n    return (\n        <div style={notificationStyle} className='notification'>{message}</div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [nameFilter, setNameFilter] = useState('')\n    const [addedMsg, setAddedMsg] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n\n    useEffect(() => {\n        phonebookService.getAll()\n            .then(data => {\n                    setPersons(data);\n                }\n            )\n    }, [])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const personObj = {\n            name: newName,\n            number: newNumber\n        }\n\n        const matches = persons.filter((person) =>\n            person.name === newName\n        )\n\n        if (matches.length > 0) {\n            console.log(`Updating entry for ${newName}`);\n            phonebookService.updatePerson(matches[0].id, personObj)\n                .then(updatedPerson => {\n                    setPersons(persons.filter(person => person.name !== newName).concat(updatedPerson));\n                    setNewName('');\n                    setAddedMsg(`Updated ${personObj.name}`);\n                    setTimeout(() => {\n                        setAddedMsg('');\n                    }, 4000);\n                })\n                .catch(error => {\n                    setErrorMsg(error.response.data['error']);\n                    setTimeout(() => {\n                        setErrorMsg('');\n                    }, 4000);\n                })\n        } else {\n            phonebookService.create(personObj)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson));\n                    setNewName('');\n                    setAddedMsg(`Added ${personObj.name}`);\n                    setTimeout(() => {\n                        setAddedMsg('');\n                    }, 4000);\n                })\n                .catch(error => {\n                    setErrorMsg(error.response.data['error']);\n                    setTimeout(() => {\n                        setErrorMsg('');\n                    }, 4000);\n                })\n        }\n    }\n\n    const handleDelete = (personId, name) => {\n        console.log(personId);\n        if (window.confirm(`Sure you want to delete ${name}?`)) {\n            phonebookService.deletePerson(personId)\n                .then(returnedPerson => {\n                    setPersons(persons.filter(person => person.id !== personId));\n                })\n                .catch(error => {\n                    setPersons(persons.filter(person => person.id !== personId));\n                    setErrorMsg(`Information of ${name} has already been removed from the server`);\n                })\n        }\n    }\n\n\n    const handleNameFilterChange = (event) => {\n        setNameFilter(event.target.value.toLowerCase())\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={addedMsg} type={'added'}/>\n            <Notification message={errorMsg} type={'error'}/>\n            <Filter nameFilter={nameFilter} handleNameFilterChange={handleNameFilterChange}/>\n            <h2>add a new</h2>\n\n            <PersonForm newName={newName}\n                        newNumber={newNumber}\n                        handleNameChange={handleNameChange}\n                        handleNumberChange={handleNumberChange}\n                        handleSubmit={handleSubmit}/>\n\n            <h2>Numbers</h2>\n\n            <Persons persons={persons}\n                     nameFilter={nameFilter}\n                     handleDelete={handleDelete}/>\n        </div>\n    )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}